import '../database/sossoldi_database.dart';

abstract class BaseEntityFields {
  static String id = 'id';
  static String createdAt = 'createdAt';
  static String updatedAt = 'updatedAt';

  static String get getId {
    return id;
  }

  static String get getCreatedAt {
    return createdAt;
  }

  static String get getUpdatedAt {
    return updatedAt;
  }
}

abstract class BaseEntity extends SossoldiDatabase {
  int id;
  DateTime? createdAt;
  DateTime? updatedAt;

  // Define the table name for the model
  String get tableName;

  BaseEntity(this.id, {this.createdAt, this.updatedAt});

  Future<int> insert() async {
    final db = await database;
    final id = await db.insert(tableName, toJson());
    return id;
  }

  Future<int> updateItem() async {
    final db = await database;

    return db.update(
      tableName,
      toJson(),
      where: '${BaseEntityFields.id} = ?',
      whereArgs: [id],
    );
  }

  Future<int> deleteById() async {
    final db = await database;

    return await db.delete(
      tableName,
      where: '${BaseEntityFields.id} = ?',
      whereArgs: [id],
    );
  }

  Map<String, dynamic> toJson() {
    return <String, dynamic>{'id': id, 'createdAt': createdAt, 'updatedAt': updatedAt};
  }

  BaseEntity fromJson(Map<String, dynamic> json) {
    id = json['id'];
    createdAt = json['createdAt'];
    updatedAt = json['updatedAt'];
    return this;
  }
}
